on:
  schedule:
    # 1:05 past midnight UTC
    - cron: "5 1 * * *"

name: "Sync with upstream"
jobs:
  patch:
    name: "Sync"
    runs-on: "ubuntu-latest"

    env:
      DEFAULT_BRANCH: "main"

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v3"
        with:
          submodules: true

      - name: "Setup toolchain"
        uses: "actions-rs/toolchain@v1"
        with:
          toolchain: "stable"
          profile: "minimal"
          override: true

      - uses: "Swatinem/rust-cache@v1"
        with:
          cache-on-failure: true

      - name: "Config Git"
        run: |
          git config user.name "Jonathan LEI"
          git config user.email "me@xjonathan.dev"

      - name: "Update default branch"
        run: |
          git fetch
          git remote add upstream https://github.com/eqlabs/pathfinder
          git fetch upstream
          git checkout $DEFAULT_BRANCH
          git reset --hard upstream/$DEFAULT_BRANCH
          git checkout origin/home ./README.md
          git checkout origin/home ./.github/
          git add .
          git commit -m "chore: README and CI changes"

      - name: "Update patch"
        run: |
          # First, point `patch` to local default branch
          git checkout patch
          git reset --hard $DEFAULT_BRANCH

          # Here, we pick commits on `patch` except the first one. We do this instead of a naive
          # rebase on the default branch because the commit made on the default branch might have
          # changed in content, causing merge conflicts.
          MERGE_BASE=$(git merge-base origin/patch upstream/$DEFAULT_BRANCH)
          COMMIT_COUNT=$(git rev-list $MERGE_BASE..origin/patch | wc -l)
          git cherry-pick origin/patch^$(($COMMIT_COUNT-1))..origin/patch

      - name: "Cargo build"
        run: |
          cargo build --all --all-targets

      - name: "Push branches"
        run: |
          git checkout $DEFAULT_BRANCH
          git push --force-with-lease
          git checkout patch
          git push --force-with-lease
